---
- name: Install and Configure Prometheus
  hosts: all
  become: true
  tasks:
    - name: Creating prometheus user group
      group: name="prometheus"
      become: true

    - name: Creating prometheus user
      user:
        name: "prometheus"
        group: "prometheus"
        system: yes
        shell: "/sbin/nologin"
        comment: "prometheus nologin User"
        createhome: "no"
        state: present

    - name: Install prometheus
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v2.47.0/prometheus-2.47.0.linux-amd64.tar.gz"
        dest: /tmp/
        remote_src: yes

    - name: Copy prometheus file to bin
      copy:
        src: "/tmp/prometheus-2.47.0.linux-amd64/prometheus"
        dest: "/usr/local/bin/prometheus"
        owner: "prometheus"
        group: "prometheus"
        remote_src: yes
        mode: 0755

    - name: Delete prometheus tmp folder
      file:
        path: '/tmp/prometheus-2.47.0.linux-amd64'
        state: absent

    - name: Creates directory
      file:
        path: "/data/prometheus/"
        state: directory
        owner: "prometheus"
        group: "prometheus"
        mode: 0755

    - name: Creates directory
      file:
        path: "/etc/prometheus/"
        state: directory
        owner: "prometheus"
        group: "prometheus"
        mode: 0755

    - name: config file
      template:
        src: prometheus.conf.j2
        dest: /etc/prometheus/prometheus.conf

    - name: Copy systemd init file
      template:
        src: prom-init.service.j2
        dest: /etc/systemd/system/prometheus.service
      notify: systemd_reload

    - name: Start prometheus service
      service:
        name: prometheus
        state: started
        enabled: yes

    - name: Wait for service up
      uri:
        url: http://localhost:9090
        method: GET
        status_code: 200
      register: __result
      until: __result.status == 200
      retries: 120
      delay: 1


  handlers:
    - name: Reload systemd
      command: systemctl daemon-reload
      listen: systemd_reload